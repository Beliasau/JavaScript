метод - свойство обьекта значение, которого функция
функция - (это обьект)это блок кода который можно выполнять многократно
функциям не рекомендуется менять внешние переменные(только внутренние )
колбэк функция - функция выполняемая в внутри другой функции

JSON (JavaScript object notation)
формат обмена данными между компьютерами в интернете

JSON.parse() 	перевод JSON строки в JavaScript обьект
JSON.stringify()	перевод обьекта в строку

const newObjeect = Objekt.assign({}, Objeect) 	создаст копию обьекта не ссылаясь на него(без последующей 
возможности изменения(мутирования) оригинала,кроме вложенных обьектов)

const newObjeect = {...Objeect}	(... оператор разделения обьекта на свойства)создаст копию обьекта не 
ссылаясь на него(без последующей возможности изменения(мутирования) оригинала,кроме вложенных обьектов)

const newObjeect = JSON.parse(JSON.stringify(Objeect)) 		создаст копию обьекта, без возможности 
дальнейшей мутации его




'use strict'	включает режим, запрещающий использования необьявленных переменных(пишется перед кодом)

=========================================================================================================

ОПЕРАТОРЫ
(встроенная в JS функция)

Арифмитические		+   -   *   /
Сравнения		===(строгое равенство(сравнивае и тип и значение))  ==(равенство)  !==(не равно)  >=   <=
Логические		&&(и)   !(не)   ||(или)
выражение1 && выражение2  (если выражение1 ложно, то выражение2 игнорируется и возвращаетя результат выражения1)
ищет первое ложное выражение
(вернет true только если все аргументы true)

выражение1 || выражение2  (если выражение1 истино, то выражение2 игнорируется и возвращаетя результат выражения1)
ищет первое истинное выражение
(вернет true если хотя бы один из аргументов true)

ПРисваивания		= 
Текстовые операторы
	tupeof	проверяет тип того или иного значения
	delete	удаляет свойство обьекта
	new
	instanceof	проверяет принадлежность обьекта тому или иному классу
Унарные операторы(у унарных операторов всегда 1 аргумент)
	а++
	+а (может конвертировать строку в число)
	tupeof
	delete
	new
Бинарные опрераторы (всегда 2 операнда(аргумента))
	а = 5
	а + в
	а += 2	оператор увеличивающий свойство на указанное значение(2)
	а === в
	а && в

()  оператор вызова функции



Ложные значения (значения при вызове которых функцией Boolean(value)  вернет FALSE )
false
0
''	(пустая строка)
undefined
null

...	оператор разделения обьекта на свойства


Оператор RETURN завершает выполнение текущей функции и возвращает её значение.
При вызове оператора return в функции её выполнение прекращается. Указанное 
значение возвращается в место вызова функции

function getRectArea(width, height) {
  if (width > 0 && height > 0) {
    return width * height;
  }
  return 0;
}

console.log(getRectArea(3, 4));
// expected output: 12

console.log(getRectArea(-3, 4));
// expected output: 0


================================================================================================================


for..in  цикл

for (key in obj) {
  /* ... делать что-то с obj[key] ... */
}

for..in последовательно переберёт свойства объекта obj, имя каждого свойства будет записано в 
key и вызвано тело цикла.

while


for


forEach


if else
